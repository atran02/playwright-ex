// go to this link 
//https://nextjs.org/docs/testing
// set up manual testing for playwright

import { test, expect } from '@playwright/test'

//create variables for pages
var homepage = 'http://localhost:3000';
var aboutPage = 'http://localhost:3000/about';
var gradesPage = 'http://localhost:3000/grades';

//before all like jest
test.beforeAll(async () => {
    console.log('Before Tests')
})

//after all like jest
test.afterAll(async () => {
    console.log('After Tests')
})

//describle is what area of the page you are gonna be testing
test.describe('Head tag area', () => {
    //test is an async function to test contents on the page.
    //You can skip a test when it is not complete and you do not want have errors by adding .skip
    test('Contains the head tag and its contents', async ({ page }) => {
        //first you need to tell it which page to view
        await page.goto(homepage);

        //this says home page is expected to have a title of Example #1
        await expect(page).toHaveTitle('Example #1');

        //this says home page is expected to have a meta tag with the name of description
        const metaDescription = page.locator('meta[name="description"]');

        //this says the meta tag is expected to have a content of Generated by create next app
        await expect(metaDescription).toHaveAttribute('content', 'Generated by create next app');

        //this says home page is expected to have a link tag with the rel of icon
        const linkIcon = page.locator('link[rel="icon"]');
        
        //this says the link tag is expected to have a href of /favicon.ico
        await expect(linkIcon).toHaveAttribute('href', '/favicon.ico');
    })
})

test.describe('Main content tests', () => {
    test('Should contain a heading welcome to my page', async ({ page }) => {
        await page.goto(homepage);
        await expect(page.locator('h1')).toHaveText('Welcome to my page');
    })

    test('Should contain a list to describe CRUD', async ({ page }) => {
        await page.goto(homepage);
        await expect(page.locator('ul > li')).toContainText(['Create', 'Read', 'Update', 'Delete']);
    })
})

test.describe('Linking to another page', () => {
    test('Should contain a link to about page', async ({ page }) => {
        await page.goto(homepage);
        await page.click('text=About Page');
        await expect(page).toHaveURL(aboutPage);
    })
    test('should contain a link to grades page', async ({ page }) => {
        await page.goto(homepage);
        await page.click('text=Grades Page');
        await expect(page).toHaveURL(gradesPage);
    })
})

test.describe('Button tests', () => {
    test('This is the info component', async ({ page }) => {
        await page.goto(homepage);
        await expect(page.locator('button')).toHaveText('View all this info');
    })
})

test.describe('Footer tests', () => {
    test('Should contain a footer on the home page', async ({ page }) => {
        await page.goto(homepage);
        await expect(page.locator('footer')).toHaveText('In Class Example #1');
    })
})

test.describe('Check about page navigates to home page', () => {
    test('Should contain a link to home page from the about page', async ({ page }) => {
        await page.goto(aboutPage);
        await page.click('text=Go Back');
        await expect(page).toHaveURL(homepage);
    })
})